[branch]
  autosetuprebase = always
[color]
  ui = auto
[core]
  pager = diff-so-fancy | less --tabs=4 -RFX
[user]
  email = DustinSpecker@DustinSpecker.com
  name = Dustin Specker
[push]
  default = simple
[alias]
  amc = am --continue
  ap = add -p
  bd = branch -d
  branches = branch -a
  c = commit
  ca = commit --amend
  cco = commit -C ORIG_HEAD
  cf = commit --fixup
  cia = commit --amend --no-edit
  cm = commit -m
  co = checkout
  cop = checkout -p
  cp = cherry-pick
  cpc = cherry-pick --continue
  dc = diff --cached
  f = fetch
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  mt = mergetool
  p = push -u origin HEAD
  rc = rebase --continue
  remotes = remote -v
  rhu = !sh -c 'git fetch --prune && git reset --hard @{upstream}'
  ri = !sh -c 'git rebase --interactive ${1:-$(git branch --points-at origin/HEAD --remotes | grep --invert-match --ignore-case HEAD)}' -
  ro = !sh -c 'git rebase --onto $1 $2 $(git rev-parse --abbrev-ref HEAD)' -
  rom = !sh -c 'git ro ${1:-$(git branch --points-at origin/HEAD --remotes | grep --invert-match --ignore-case HEAD)} $(git merge-base ${1:-$(git branch --points-at origin/HEAD --remotes | grep --invert-match --ignore-case HEAD)} HEAD)' -
  root = rev-parse --show-toplevel
  sl = stash list
  sp = stash pop
  ss = stash
  st = status -sb
  tags = tag -l
  watch = !watch -c git lg --color
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
[diff]
  algorithm = patience
  compactionHeuristic = true
  tool = vimdiff
[pull]
  rebase = true
[pager]
  diff = diff-so-fancy | less --tabs=4 -RFX
  show = diff-so-fancy | less --tabs=4 -RFX
[rebase]
  autosquash = true
  autostash = true
[merge]
  conflictstyle = diff3
  tool = vimdiff
[init]
  defaultBranch = main
[submodule]
	recurse = true
